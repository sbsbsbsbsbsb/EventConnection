//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------



namespace EventConnection
{
    public partial class App : global::Windows.UI.Xaml.Markup.IXamlMetadataProvider
    {
        private global::EventConnection.EventConnection_WindowsPhone_XamlTypeInfo.XamlTypeInfoProvider _provider;

        public global::Windows.UI.Xaml.Markup.IXamlType GetXamlType(global::System.Type type)
        {
            if(_provider == null)
            {
                _provider = new global::EventConnection.EventConnection_WindowsPhone_XamlTypeInfo.XamlTypeInfoProvider();
            }
            return _provider.GetXamlTypeByType(type);
        }

        public global::Windows.UI.Xaml.Markup.IXamlType GetXamlType(string fullName)
        {
            if(_provider == null)
            {
                _provider = new global::EventConnection.EventConnection_WindowsPhone_XamlTypeInfo.XamlTypeInfoProvider();
            }
            return _provider.GetXamlTypeByName(fullName);
        }

        public global::Windows.UI.Xaml.Markup.XmlnsDefinition[] GetXmlnsDefinitions()
        {
            return new global::Windows.UI.Xaml.Markup.XmlnsDefinition[0];
        }
    }
}

namespace EventConnection.EventConnection_WindowsPhone_XamlTypeInfo
{
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks", "4.0.0.0")]    
    [System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal partial class XamlTypeInfoProvider
    {
        public global::Windows.UI.Xaml.Markup.IXamlType GetXamlTypeByType(global::System.Type type)
        {
            global::Windows.UI.Xaml.Markup.IXamlType xamlType;
            if (_xamlTypeCacheByType.TryGetValue(type, out xamlType))
            {
                return xamlType;
            }
            int typeIndex = LookupTypeIndexByType(type);
            if(typeIndex != -1)
            {
                xamlType = CreateXamlType(typeIndex);
            }
            var userXamlType = xamlType as global::EventConnection.EventConnection_WindowsPhone_XamlTypeInfo.XamlUserType;
            if(xamlType == null || (userXamlType != null && userXamlType.IsReturnTypeStub && !userXamlType.IsLocalType))
            {
                global::Windows.UI.Xaml.Markup.IXamlType libXamlType = CheckOtherMetadataProvidersForType(type);
                if (libXamlType != null)
                {
                    if(libXamlType.IsConstructible || xamlType == null)
                    {
                        xamlType = libXamlType;
                    }
                }
            }
            if (xamlType != null)
            {
                _xamlTypeCacheByName.Add(xamlType.FullName, xamlType);
                _xamlTypeCacheByType.Add(xamlType.UnderlyingType, xamlType);
            }
            return xamlType;
        }

        public global::Windows.UI.Xaml.Markup.IXamlType GetXamlTypeByName(string typeName)
        {
            if (string.IsNullOrEmpty(typeName))
            {
                return null;
            }
            global::Windows.UI.Xaml.Markup.IXamlType xamlType;
            if (_xamlTypeCacheByName.TryGetValue(typeName, out xamlType))
            {
                return xamlType;
            }
            int typeIndex = LookupTypeIndexByName(typeName);
            if(typeIndex != -1)
            {
                xamlType = CreateXamlType(typeIndex);
            }
            var userXamlType = xamlType as global::EventConnection.EventConnection_WindowsPhone_XamlTypeInfo.XamlUserType;
            if(xamlType == null || (userXamlType != null && userXamlType.IsReturnTypeStub && !userXamlType.IsLocalType))
            {
                global::Windows.UI.Xaml.Markup.IXamlType libXamlType = CheckOtherMetadataProvidersForName(typeName);
                if (libXamlType != null)
                {
                    if(libXamlType.IsConstructible || xamlType == null)
                    {
                        xamlType = libXamlType;
                    }
                }
            }
            if (xamlType != null)
            {
                _xamlTypeCacheByName.Add(xamlType.FullName, xamlType);
                _xamlTypeCacheByType.Add(xamlType.UnderlyingType, xamlType);
            }
            return xamlType;
        }

        public global::Windows.UI.Xaml.Markup.IXamlMember GetMemberByLongName(string longMemberName)
        {
            if (string.IsNullOrEmpty(longMemberName))
            {
                return null;
            }
            global::Windows.UI.Xaml.Markup.IXamlMember xamlMember;
            if (_xamlMembers.TryGetValue(longMemberName, out xamlMember))
            {
                return xamlMember;
            }
            xamlMember = CreateXamlMember(longMemberName);
            if (xamlMember != null)
            {
                _xamlMembers.Add(longMemberName, xamlMember);
            }
            return xamlMember;
        }

        global::System.Collections.Generic.Dictionary<string, global::Windows.UI.Xaml.Markup.IXamlType>
                _xamlTypeCacheByName = new global::System.Collections.Generic.Dictionary<string, global::Windows.UI.Xaml.Markup.IXamlType>();

        global::System.Collections.Generic.Dictionary<global::System.Type, global::Windows.UI.Xaml.Markup.IXamlType>
                _xamlTypeCacheByType = new global::System.Collections.Generic.Dictionary<global::System.Type, global::Windows.UI.Xaml.Markup.IXamlType>();

        global::System.Collections.Generic.Dictionary<string, global::Windows.UI.Xaml.Markup.IXamlMember>
                _xamlMembers = new global::System.Collections.Generic.Dictionary<string, global::Windows.UI.Xaml.Markup.IXamlMember>();

        string[] _typeNameTable = null;
        global::System.Type[] _typeTable = null;

        private void InitTypeTables()
        {
            _typeNameTable = new string[43];
            _typeNameTable[0] = "Microsoft.Practices.Prism.Mvvm.MvvmAppBase";
            _typeNameTable[1] = "Windows.UI.Xaml.Application";
            _typeNameTable[2] = "Boolean";
            _typeNameTable[3] = "Microsoft.Practices.Prism.Mvvm.ViewModelLocator";
            _typeNameTable[4] = "Object";
            _typeNameTable[5] = "Windows.UI.Xaml.DependencyObject";
            _typeNameTable[6] = "EventConnection.Controls.MenuControl";
            _typeNameTable[7] = "Windows.UI.Xaml.Controls.UserControl";
            _typeNameTable[8] = "Microsoft.Practices.Prism.StoreApps.VisualStateAwarePage";
            _typeNameTable[9] = "Windows.UI.Xaml.Controls.Page";
            _typeNameTable[10] = "Int32";
            _typeNameTable[11] = "Microsoft.Practices.Prism.Commands.DelegateCommand";
            _typeNameTable[12] = "Microsoft.Practices.Prism.Commands.DelegateCommandBase";
            _typeNameTable[13] = "EventConnection.Pages.MainPage";
            _typeNameTable[14] = "JISoft.RatingControl.Rating";
            _typeNameTable[15] = "Windows.UI.Xaml.Controls.Control";
            _typeNameTable[16] = "Double";
            _typeNameTable[17] = "Windows.UI.Xaml.Style";
            _typeNameTable[18] = "Windows.UI.Xaml.Controls.Orientation";
            _typeNameTable[19] = "JISoft.RatingControl.RatingItem";
            _typeNameTable[20] = "Tools.Extentions.xaml.HtmlInput";
            _typeNameTable[21] = "String";
            _typeNameTable[22] = "EventConnection.Pages.EventDisplay";
            _typeNameTable[23] = "EventConnection.Pages.EventsList";
            _typeNameTable[24] = "Tools.ValidationEngine.Converters.ValidationCollectionToColorBrush";
            _typeNameTable[25] = "EventConnection.Pages.LoginPageForm";
            _typeNameTable[26] = "Facebook.Client.Controls.LoginButton";
            _typeNameTable[27] = "Facebook.Client.Controls.Audience";
            _typeNameTable[28] = "System.Enum";
            _typeNameTable[29] = "System.ValueType";
            _typeNameTable[30] = "Facebook.Client.FacebookLoginBehavior";
            _typeNameTable[31] = "Facebook.Client.GraphUser";
            _typeNameTable[32] = "Facebook.Client.GraphObject";
            _typeNameTable[33] = "Windows.UI.Xaml.CornerRadius";
            _typeNameTable[34] = "EventConnection.Pages.LoginSocial";
            _typeNameTable[35] = "EventConnection.Pages.Rating_BestModerator";
            _typeNameTable[36] = "EventConnection.Pages.Rating_BestSection";
            _typeNameTable[37] = "EventConnection.Pages.Rating_BestSpeaker";
            _typeNameTable[38] = "EventConnection.Pages.Rating_Common";
            _typeNameTable[39] = "EventConnection.Pages.Rating_Final";
            _typeNameTable[40] = "EventConnection.Pages.Rating_Main";
            _typeNameTable[41] = "EventConnection.Pages.Rating_Review";
            _typeNameTable[42] = "EventConnection.Pages.StaffDisplay";

            _typeTable = new global::System.Type[43];
            _typeTable[0] = typeof(global::Microsoft.Practices.Prism.Mvvm.MvvmAppBase);
            _typeTable[1] = typeof(global::Windows.UI.Xaml.Application);
            _typeTable[2] = typeof(global::System.Boolean);
            _typeTable[3] = typeof(global::Microsoft.Practices.Prism.Mvvm.ViewModelLocator);
            _typeTable[4] = typeof(global::System.Object);
            _typeTable[5] = typeof(global::Windows.UI.Xaml.DependencyObject);
            _typeTable[6] = typeof(global::EventConnection.Controls.MenuControl);
            _typeTable[7] = typeof(global::Windows.UI.Xaml.Controls.UserControl);
            _typeTable[8] = typeof(global::Microsoft.Practices.Prism.StoreApps.VisualStateAwarePage);
            _typeTable[9] = typeof(global::Windows.UI.Xaml.Controls.Page);
            _typeTable[10] = typeof(global::System.Int32);
            _typeTable[11] = typeof(global::Microsoft.Practices.Prism.Commands.DelegateCommand);
            _typeTable[12] = typeof(global::Microsoft.Practices.Prism.Commands.DelegateCommandBase);
            _typeTable[13] = typeof(global::EventConnection.Pages.MainPage);
            _typeTable[14] = typeof(global::JISoft.RatingControl.Rating);
            _typeTable[15] = typeof(global::Windows.UI.Xaml.Controls.Control);
            _typeTable[16] = typeof(global::System.Double);
            _typeTable[17] = typeof(global::Windows.UI.Xaml.Style);
            _typeTable[18] = typeof(global::Windows.UI.Xaml.Controls.Orientation);
            _typeTable[19] = typeof(global::JISoft.RatingControl.RatingItem);
            _typeTable[20] = typeof(global::Tools.Extentions.xaml.HtmlInput);
            _typeTable[21] = typeof(global::System.String);
            _typeTable[22] = typeof(global::EventConnection.Pages.EventDisplay);
            _typeTable[23] = typeof(global::EventConnection.Pages.EventsList);
            _typeTable[24] = typeof(global::Tools.ValidationEngine.Converters.ValidationCollectionToColorBrush);
            _typeTable[25] = typeof(global::EventConnection.Pages.LoginPageForm);
            _typeTable[26] = typeof(global::Facebook.Client.Controls.LoginButton);
            _typeTable[27] = typeof(global::Facebook.Client.Controls.Audience);
            _typeTable[28] = typeof(global::System.Enum);
            _typeTable[29] = typeof(global::System.ValueType);
            _typeTable[30] = typeof(global::Facebook.Client.FacebookLoginBehavior);
            _typeTable[31] = typeof(global::Facebook.Client.GraphUser);
            _typeTable[32] = typeof(global::Facebook.Client.GraphObject);
            _typeTable[33] = typeof(global::Windows.UI.Xaml.CornerRadius);
            _typeTable[34] = typeof(global::EventConnection.Pages.LoginSocial);
            _typeTable[35] = typeof(global::EventConnection.Pages.Rating_BestModerator);
            _typeTable[36] = typeof(global::EventConnection.Pages.Rating_BestSection);
            _typeTable[37] = typeof(global::EventConnection.Pages.Rating_BestSpeaker);
            _typeTable[38] = typeof(global::EventConnection.Pages.Rating_Common);
            _typeTable[39] = typeof(global::EventConnection.Pages.Rating_Final);
            _typeTable[40] = typeof(global::EventConnection.Pages.Rating_Main);
            _typeTable[41] = typeof(global::EventConnection.Pages.Rating_Review);
            _typeTable[42] = typeof(global::EventConnection.Pages.StaffDisplay);
        }

        private int LookupTypeIndexByName(string typeName)
        {
            if (_typeNameTable == null)
            {
                InitTypeTables();
            }
            for (int i=0; i<_typeNameTable.Length; i++)
            {
                if(0 == string.CompareOrdinal(_typeNameTable[i], typeName))
                {
                    return i;
                }
            }
            return -1;
        }

        private int LookupTypeIndexByType(global::System.Type type)
        {
            if (_typeTable == null)
            {
                InitTypeTables();
            }
            for(int i=0; i<_typeTable.Length; i++)
            {
                if(type == _typeTable[i])
                {
                    return i;
                }
            }
            return -1;
        }

        private object Activate_6_MenuControl() { return new global::EventConnection.Controls.MenuControl(); }
        private object Activate_8_VisualStateAwarePage() { return new global::Microsoft.Practices.Prism.StoreApps.VisualStateAwarePage(); }
        private object Activate_13_MainPage() { return new global::EventConnection.Pages.MainPage(); }
        private object Activate_14_Rating() { return new global::JISoft.RatingControl.Rating(); }
        private object Activate_19_RatingItem() { return new global::JISoft.RatingControl.RatingItem(); }
        private object Activate_20_HtmlInput() { return new global::Tools.Extentions.xaml.HtmlInput(); }
        private object Activate_22_EventDisplay() { return new global::EventConnection.Pages.EventDisplay(); }
        private object Activate_23_EventsList() { return new global::EventConnection.Pages.EventsList(); }
        private object Activate_24_ValidationCollectionToColorBrush() { return new global::Tools.ValidationEngine.Converters.ValidationCollectionToColorBrush(); }
        private object Activate_25_LoginPageForm() { return new global::EventConnection.Pages.LoginPageForm(); }
        private object Activate_26_LoginButton() { return new global::Facebook.Client.Controls.LoginButton(); }
        private object Activate_31_GraphUser() { return new global::Facebook.Client.GraphUser(); }
        private object Activate_32_GraphObject() { return new global::Facebook.Client.GraphObject(); }
        private object Activate_34_LoginSocial() { return new global::EventConnection.Pages.LoginSocial(); }
        private object Activate_35_Rating_BestModerator() { return new global::EventConnection.Pages.Rating_BestModerator(); }
        private object Activate_36_Rating_BestSection() { return new global::EventConnection.Pages.Rating_BestSection(); }
        private object Activate_37_Rating_BestSpeaker() { return new global::EventConnection.Pages.Rating_BestSpeaker(); }
        private object Activate_38_Rating_Common() { return new global::EventConnection.Pages.Rating_Common(); }
        private object Activate_39_Rating_Final() { return new global::EventConnection.Pages.Rating_Final(); }
        private object Activate_40_Rating_Main() { return new global::EventConnection.Pages.Rating_Main(); }
        private object Activate_41_Rating_Review() { return new global::EventConnection.Pages.Rating_Review(); }
        private object Activate_42_StaffDisplay() { return new global::EventConnection.Pages.StaffDisplay(); }

        private global::Windows.UI.Xaml.Markup.IXamlType CreateXamlType(int typeIndex)
        {
            global::EventConnection.EventConnection_WindowsPhone_XamlTypeInfo.XamlSystemBaseType xamlType = null;
            global::EventConnection.EventConnection_WindowsPhone_XamlTypeInfo.XamlUserType userType;
            string typeName = _typeNameTable[typeIndex];
            global::System.Type type = _typeTable[typeIndex];

            switch (typeIndex)
            {

            case 0:   //  Microsoft.Practices.Prism.Mvvm.MvvmAppBase
                userType = new global::EventConnection.EventConnection_WindowsPhone_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Application"));
                userType.AddMemberName("IsSuspending");
                xamlType = userType;
                break;

            case 1:   //  Windows.UI.Xaml.Application
                xamlType = new global::EventConnection.EventConnection_WindowsPhone_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 2:   //  Boolean
                xamlType = new global::EventConnection.EventConnection_WindowsPhone_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 3:   //  Microsoft.Practices.Prism.Mvvm.ViewModelLocator
                userType = new global::EventConnection.EventConnection_WindowsPhone_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.AddMemberName("AutoWireViewModel");
                xamlType = userType;
                break;

            case 4:   //  Object
                xamlType = new global::EventConnection.EventConnection_WindowsPhone_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 5:   //  Windows.UI.Xaml.DependencyObject
                xamlType = new global::EventConnection.EventConnection_WindowsPhone_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 6:   //  EventConnection.Controls.MenuControl
                userType = new global::EventConnection.EventConnection_WindowsPhone_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.UserControl"));
                userType.Activator = Activate_6_MenuControl;
                userType.AddMemberName("ExpliciteEventsLock");
                userType.AddMemberName("ExpliciteChatLock");
                userType.AddMemberName("ExpliciteReviewLock");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 7:   //  Windows.UI.Xaml.Controls.UserControl
                xamlType = new global::EventConnection.EventConnection_WindowsPhone_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 8:   //  Microsoft.Practices.Prism.StoreApps.VisualStateAwarePage
                userType = new global::EventConnection.EventConnection_WindowsPhone_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_8_VisualStateAwarePage;
                userType.AddMemberName("MinimalLayoutWidth");
                userType.AddMemberName("GoBackCommand");
                xamlType = userType;
                break;

            case 9:   //  Windows.UI.Xaml.Controls.Page
                xamlType = new global::EventConnection.EventConnection_WindowsPhone_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 10:   //  Int32
                xamlType = new global::EventConnection.EventConnection_WindowsPhone_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 11:   //  Microsoft.Practices.Prism.Commands.DelegateCommand
                userType = new global::EventConnection.EventConnection_WindowsPhone_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.Practices.Prism.Commands.DelegateCommandBase"));
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 12:   //  Microsoft.Practices.Prism.Commands.DelegateCommandBase
                userType = new global::EventConnection.EventConnection_WindowsPhone_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                xamlType = userType;
                break;

            case 13:   //  EventConnection.Pages.MainPage
                userType = new global::EventConnection.EventConnection_WindowsPhone_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.Practices.Prism.StoreApps.VisualStateAwarePage"));
                userType.Activator = Activate_13_MainPage;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 14:   //  JISoft.RatingControl.Rating
                userType = new global::EventConnection.EventConnection_WindowsPhone_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Control"));
                userType.Activator = Activate_14_Rating;
                userType.AddMemberName("AllowSelectingZero");
                userType.AddMemberName("ReadOnly");
                userType.AddMemberName("RatingItemCount");
                userType.AddMemberName("Value");
                userType.AddMemberName("FilledItemStyle");
                userType.AddMemberName("UnfilledItemStyle");
                userType.AddMemberName("ShowSelectionHelper");
                userType.AddMemberName("Orientation");
                xamlType = userType;
                break;

            case 15:   //  Windows.UI.Xaml.Controls.Control
                xamlType = new global::EventConnection.EventConnection_WindowsPhone_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 16:   //  Double
                xamlType = new global::EventConnection.EventConnection_WindowsPhone_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 17:   //  Windows.UI.Xaml.Style
                xamlType = new global::EventConnection.EventConnection_WindowsPhone_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 18:   //  Windows.UI.Xaml.Controls.Orientation
                xamlType = new global::EventConnection.EventConnection_WindowsPhone_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 19:   //  JISoft.RatingControl.RatingItem
                userType = new global::EventConnection.EventConnection_WindowsPhone_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Control"));
                userType.Activator = Activate_19_RatingItem;
                userType.AddMemberName("StrokeThickness");
                xamlType = userType;
                break;

            case 20:   //  Tools.Extentions.xaml.HtmlInput
                userType = new global::EventConnection.EventConnection_WindowsPhone_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.DependencyObject"));
                userType.Activator = Activate_20_HtmlInput;
                userType.AddMemberName("Html");
                xamlType = userType;
                break;

            case 21:   //  String
                xamlType = new global::EventConnection.EventConnection_WindowsPhone_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 22:   //  EventConnection.Pages.EventDisplay
                userType = new global::EventConnection.EventConnection_WindowsPhone_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.Practices.Prism.StoreApps.VisualStateAwarePage"));
                userType.Activator = Activate_22_EventDisplay;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 23:   //  EventConnection.Pages.EventsList
                userType = new global::EventConnection.EventConnection_WindowsPhone_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.Practices.Prism.StoreApps.VisualStateAwarePage"));
                userType.Activator = Activate_23_EventsList;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 24:   //  Tools.ValidationEngine.Converters.ValidationCollectionToColorBrush
                userType = new global::EventConnection.EventConnection_WindowsPhone_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_24_ValidationCollectionToColorBrush;
                xamlType = userType;
                break;

            case 25:   //  EventConnection.Pages.LoginPageForm
                userType = new global::EventConnection.EventConnection_WindowsPhone_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.Practices.Prism.StoreApps.VisualStateAwarePage"));
                userType.Activator = Activate_25_LoginPageForm;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 26:   //  Facebook.Client.Controls.LoginButton
                userType = new global::EventConnection.EventConnection_WindowsPhone_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Control"));
                userType.Activator = Activate_26_LoginButton;
                userType.AddMemberName("FetchUserInfo");
                userType.AddMemberName("Permissions");
                userType.AddMemberName("DefaultAudience");
                userType.AddMemberName("LoginBehavior");
                userType.AddMemberName("CurrentUser");
                userType.AddMemberName("CornerRadius");
                xamlType = userType;
                break;

            case 27:   //  Facebook.Client.Controls.Audience
                userType = new global::EventConnection.EventConnection_WindowsPhone_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("None", global::Facebook.Client.Controls.Audience.None);
                userType.AddEnumValue("OnlyMe", global::Facebook.Client.Controls.Audience.OnlyMe);
                userType.AddEnumValue("Friends", global::Facebook.Client.Controls.Audience.Friends);
                userType.AddEnumValue("Everyone", global::Facebook.Client.Controls.Audience.Everyone);
                xamlType = userType;
                break;

            case 28:   //  System.Enum
                userType = new global::EventConnection.EventConnection_WindowsPhone_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.ValueType"));
                xamlType = userType;
                break;

            case 29:   //  System.ValueType
                userType = new global::EventConnection.EventConnection_WindowsPhone_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                xamlType = userType;
                break;

            case 30:   //  Facebook.Client.FacebookLoginBehavior
                userType = new global::EventConnection.EventConnection_WindowsPhone_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("LoginBehaviorApplicationOnly", global::Facebook.Client.FacebookLoginBehavior.LoginBehaviorApplicationOnly);
                userType.AddEnumValue("LoginBehaviorMobileInternetExplorerOnly", global::Facebook.Client.FacebookLoginBehavior.LoginBehaviorMobileInternetExplorerOnly);
                userType.AddEnumValue("LoginBehaviorWebViewOnly", global::Facebook.Client.FacebookLoginBehavior.LoginBehaviorWebViewOnly);
                userType.AddEnumValue("LoginBehaviorAppwithMobileInternetFallback", global::Facebook.Client.FacebookLoginBehavior.LoginBehaviorAppwithMobileInternetFallback);
                userType.AddEnumValue("LoginBehaviorWebAuthenticationBroker", global::Facebook.Client.FacebookLoginBehavior.LoginBehaviorWebAuthenticationBroker);
                xamlType = userType;
                break;

            case 31:   //  Facebook.Client.GraphUser
                userType = new global::EventConnection.EventConnection_WindowsPhone_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Facebook.Client.GraphObject"));
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 32:   //  Facebook.Client.GraphObject
                userType = new global::EventConnection.EventConnection_WindowsPhone_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_32_GraphObject;
                xamlType = userType;
                break;

            case 33:   //  Windows.UI.Xaml.CornerRadius
                xamlType = new global::EventConnection.EventConnection_WindowsPhone_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 34:   //  EventConnection.Pages.LoginSocial
                userType = new global::EventConnection.EventConnection_WindowsPhone_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.Practices.Prism.StoreApps.VisualStateAwarePage"));
                userType.Activator = Activate_34_LoginSocial;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 35:   //  EventConnection.Pages.Rating_BestModerator
                userType = new global::EventConnection.EventConnection_WindowsPhone_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.Practices.Prism.StoreApps.VisualStateAwarePage"));
                userType.Activator = Activate_35_Rating_BestModerator;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 36:   //  EventConnection.Pages.Rating_BestSection
                userType = new global::EventConnection.EventConnection_WindowsPhone_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.Practices.Prism.StoreApps.VisualStateAwarePage"));
                userType.Activator = Activate_36_Rating_BestSection;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 37:   //  EventConnection.Pages.Rating_BestSpeaker
                userType = new global::EventConnection.EventConnection_WindowsPhone_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.Practices.Prism.StoreApps.VisualStateAwarePage"));
                userType.Activator = Activate_37_Rating_BestSpeaker;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 38:   //  EventConnection.Pages.Rating_Common
                userType = new global::EventConnection.EventConnection_WindowsPhone_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.Practices.Prism.StoreApps.VisualStateAwarePage"));
                userType.Activator = Activate_38_Rating_Common;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 39:   //  EventConnection.Pages.Rating_Final
                userType = new global::EventConnection.EventConnection_WindowsPhone_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.Practices.Prism.StoreApps.VisualStateAwarePage"));
                userType.Activator = Activate_39_Rating_Final;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 40:   //  EventConnection.Pages.Rating_Main
                userType = new global::EventConnection.EventConnection_WindowsPhone_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.Practices.Prism.StoreApps.VisualStateAwarePage"));
                userType.Activator = Activate_40_Rating_Main;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 41:   //  EventConnection.Pages.Rating_Review
                userType = new global::EventConnection.EventConnection_WindowsPhone_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.Practices.Prism.StoreApps.VisualStateAwarePage"));
                userType.Activator = Activate_41_Rating_Review;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 42:   //  EventConnection.Pages.StaffDisplay
                userType = new global::EventConnection.EventConnection_WindowsPhone_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.Practices.Prism.StoreApps.VisualStateAwarePage"));
                userType.Activator = Activate_42_StaffDisplay;
                userType.SetIsLocalType();
                xamlType = userType;
                break;
            }
            return xamlType;
        }

        private global::System.Collections.Generic.List<global::Windows.UI.Xaml.Markup.IXamlMetadataProvider> _otherProviders;
        private global::System.Collections.Generic.List<global::Windows.UI.Xaml.Markup.IXamlMetadataProvider> OtherProviders
        {
            get
            {
                if(_otherProviders == null)
                {
                    _otherProviders = new global::System.Collections.Generic.List<global::Windows.UI.Xaml.Markup.IXamlMetadataProvider>();
                    global::Windows.UI.Xaml.Markup.IXamlMetadataProvider provider;
                    provider = new global::Facebook.Client.Facebook_Client_Universal_WindowsPhone_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    _otherProviders.Add(provider); 
                    provider = new global::JISoft.RatingControl.JRatingControl_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    _otherProviders.Add(provider); 
                }
                return _otherProviders;
            }
        }

        private global::Windows.UI.Xaml.Markup.IXamlType CheckOtherMetadataProvidersForName(string typeName)
        {
            global::Windows.UI.Xaml.Markup.IXamlType xamlType = null;
            global::Windows.UI.Xaml.Markup.IXamlType foundXamlType = null;
            foreach(global::Windows.UI.Xaml.Markup.IXamlMetadataProvider xmp in OtherProviders)
            {
                xamlType = xmp.GetXamlType(typeName);
                if(xamlType != null)
                {
                    if(xamlType.IsConstructible)    // not Constructible means it might be a Return Type Stub
                    {
                        return xamlType;
                    }
                    foundXamlType = xamlType;
                }
            }
            return foundXamlType;
        }

        private global::Windows.UI.Xaml.Markup.IXamlType CheckOtherMetadataProvidersForType(global::System.Type type)
        {
            global::Windows.UI.Xaml.Markup.IXamlType xamlType = null;
            global::Windows.UI.Xaml.Markup.IXamlType foundXamlType = null;
            foreach(global::Windows.UI.Xaml.Markup.IXamlMetadataProvider xmp in OtherProviders)
            {
                xamlType = xmp.GetXamlType(type);
                if(xamlType != null)
                {
                    if(xamlType.IsConstructible)    // not Constructible means it might be a Return Type Stub
                    {
                        return xamlType;
                    }
                    foundXamlType = xamlType;
                }
            }
            return foundXamlType;
        }

        private object get_0_MvvmAppBase_IsSuspending(object instance)
        {
            var that = (global::Microsoft.Practices.Prism.Mvvm.MvvmAppBase)instance;
            return that.IsSuspending;
        }
        private object get_1_ViewModelLocator_AutoWireViewModel(object instance)
        {
            return global::Microsoft.Practices.Prism.Mvvm.ViewModelLocator.GetAutoWireViewModel((global::Windows.UI.Xaml.DependencyObject)instance);
        }
        private void set_1_ViewModelLocator_AutoWireViewModel(object instance, object Value)
        {
            global::Microsoft.Practices.Prism.Mvvm.ViewModelLocator.SetAutoWireViewModel((global::Windows.UI.Xaml.DependencyObject)instance, (global::System.Boolean)Value);
        }
        private object get_2_MenuControl_ExpliciteEventsLock(object instance)
        {
            var that = (global::EventConnection.Controls.MenuControl)instance;
            return that.ExpliciteEventsLock;
        }
        private void set_2_MenuControl_ExpliciteEventsLock(object instance, object Value)
        {
            var that = (global::EventConnection.Controls.MenuControl)instance;
            that.ExpliciteEventsLock = (global::System.Boolean)Value;
        }
        private object get_3_MenuControl_ExpliciteChatLock(object instance)
        {
            var that = (global::EventConnection.Controls.MenuControl)instance;
            return that.ExpliciteChatLock;
        }
        private void set_3_MenuControl_ExpliciteChatLock(object instance, object Value)
        {
            var that = (global::EventConnection.Controls.MenuControl)instance;
            that.ExpliciteChatLock = (global::System.Boolean)Value;
        }
        private object get_4_MenuControl_ExpliciteReviewLock(object instance)
        {
            var that = (global::EventConnection.Controls.MenuControl)instance;
            return that.ExpliciteReviewLock;
        }
        private void set_4_MenuControl_ExpliciteReviewLock(object instance, object Value)
        {
            var that = (global::EventConnection.Controls.MenuControl)instance;
            that.ExpliciteReviewLock = (global::System.Boolean)Value;
        }
        private object get_5_VisualStateAwarePage_MinimalLayoutWidth(object instance)
        {
            var that = (global::Microsoft.Practices.Prism.StoreApps.VisualStateAwarePage)instance;
            return that.MinimalLayoutWidth;
        }
        private void set_5_VisualStateAwarePage_MinimalLayoutWidth(object instance, object Value)
        {
            var that = (global::Microsoft.Practices.Prism.StoreApps.VisualStateAwarePage)instance;
            that.MinimalLayoutWidth = (global::System.Int32)Value;
        }
        private object get_6_VisualStateAwarePage_GoBackCommand(object instance)
        {
            var that = (global::Microsoft.Practices.Prism.StoreApps.VisualStateAwarePage)instance;
            return that.GoBackCommand;
        }
        private void set_6_VisualStateAwarePage_GoBackCommand(object instance, object Value)
        {
            var that = (global::Microsoft.Practices.Prism.StoreApps.VisualStateAwarePage)instance;
            that.GoBackCommand = (global::Microsoft.Practices.Prism.Commands.DelegateCommand)Value;
        }
        private object get_7_Rating_AllowSelectingZero(object instance)
        {
            var that = (global::JISoft.RatingControl.Rating)instance;
            return that.AllowSelectingZero;
        }
        private void set_7_Rating_AllowSelectingZero(object instance, object Value)
        {
            var that = (global::JISoft.RatingControl.Rating)instance;
            that.AllowSelectingZero = (global::System.Boolean)Value;
        }
        private object get_8_Rating_ReadOnly(object instance)
        {
            var that = (global::JISoft.RatingControl.Rating)instance;
            return that.ReadOnly;
        }
        private void set_8_Rating_ReadOnly(object instance, object Value)
        {
            var that = (global::JISoft.RatingControl.Rating)instance;
            that.ReadOnly = (global::System.Boolean)Value;
        }
        private object get_9_Rating_RatingItemCount(object instance)
        {
            var that = (global::JISoft.RatingControl.Rating)instance;
            return that.RatingItemCount;
        }
        private void set_9_Rating_RatingItemCount(object instance, object Value)
        {
            var that = (global::JISoft.RatingControl.Rating)instance;
            that.RatingItemCount = (global::System.Int32)Value;
        }
        private object get_10_Rating_Value(object instance)
        {
            var that = (global::JISoft.RatingControl.Rating)instance;
            return that.Value;
        }
        private void set_10_Rating_Value(object instance, object Value)
        {
            var that = (global::JISoft.RatingControl.Rating)instance;
            that.Value = (global::System.Double)Value;
        }
        private object get_11_Rating_FilledItemStyle(object instance)
        {
            var that = (global::JISoft.RatingControl.Rating)instance;
            return that.FilledItemStyle;
        }
        private void set_11_Rating_FilledItemStyle(object instance, object Value)
        {
            var that = (global::JISoft.RatingControl.Rating)instance;
            that.FilledItemStyle = (global::Windows.UI.Xaml.Style)Value;
        }
        private object get_12_Rating_UnfilledItemStyle(object instance)
        {
            var that = (global::JISoft.RatingControl.Rating)instance;
            return that.UnfilledItemStyle;
        }
        private void set_12_Rating_UnfilledItemStyle(object instance, object Value)
        {
            var that = (global::JISoft.RatingControl.Rating)instance;
            that.UnfilledItemStyle = (global::Windows.UI.Xaml.Style)Value;
        }
        private object get_13_Rating_ShowSelectionHelper(object instance)
        {
            var that = (global::JISoft.RatingControl.Rating)instance;
            return that.ShowSelectionHelper;
        }
        private void set_13_Rating_ShowSelectionHelper(object instance, object Value)
        {
            var that = (global::JISoft.RatingControl.Rating)instance;
            that.ShowSelectionHelper = (global::System.Boolean)Value;
        }
        private object get_14_Rating_Orientation(object instance)
        {
            var that = (global::JISoft.RatingControl.Rating)instance;
            return that.Orientation;
        }
        private void set_14_Rating_Orientation(object instance, object Value)
        {
            var that = (global::JISoft.RatingControl.Rating)instance;
            that.Orientation = (global::Windows.UI.Xaml.Controls.Orientation)Value;
        }
        private object get_15_RatingItem_StrokeThickness(object instance)
        {
            var that = (global::JISoft.RatingControl.RatingItem)instance;
            return that.StrokeThickness;
        }
        private void set_15_RatingItem_StrokeThickness(object instance, object Value)
        {
            var that = (global::JISoft.RatingControl.RatingItem)instance;
            that.StrokeThickness = (global::System.Double)Value;
        }
        private object get_16_HtmlInput_Html(object instance)
        {
            return global::Tools.Extentions.xaml.HtmlInput.GetHtml((global::Windows.UI.Xaml.DependencyObject)instance);
        }
        private void set_16_HtmlInput_Html(object instance, object Value)
        {
            global::Tools.Extentions.xaml.HtmlInput.SetHtml((global::Windows.UI.Xaml.DependencyObject)instance, (global::System.String)Value);
        }
        private object get_17_LoginButton_FetchUserInfo(object instance)
        {
            var that = (global::Facebook.Client.Controls.LoginButton)instance;
            return that.FetchUserInfo;
        }
        private void set_17_LoginButton_FetchUserInfo(object instance, object Value)
        {
            var that = (global::Facebook.Client.Controls.LoginButton)instance;
            that.FetchUserInfo = (global::System.Boolean)Value;
        }
        private object get_18_LoginButton_Permissions(object instance)
        {
            var that = (global::Facebook.Client.Controls.LoginButton)instance;
            return that.Permissions;
        }
        private void set_18_LoginButton_Permissions(object instance, object Value)
        {
            var that = (global::Facebook.Client.Controls.LoginButton)instance;
            that.Permissions = (global::System.String)Value;
        }
        private object get_19_LoginButton_DefaultAudience(object instance)
        {
            var that = (global::Facebook.Client.Controls.LoginButton)instance;
            return that.DefaultAudience;
        }
        private void set_19_LoginButton_DefaultAudience(object instance, object Value)
        {
            var that = (global::Facebook.Client.Controls.LoginButton)instance;
            that.DefaultAudience = (global::Facebook.Client.Controls.Audience)Value;
        }
        private object get_20_LoginButton_LoginBehavior(object instance)
        {
            var that = (global::Facebook.Client.Controls.LoginButton)instance;
            return that.LoginBehavior;
        }
        private void set_20_LoginButton_LoginBehavior(object instance, object Value)
        {
            var that = (global::Facebook.Client.Controls.LoginButton)instance;
            that.LoginBehavior = (global::Facebook.Client.FacebookLoginBehavior)Value;
        }
        private object get_21_LoginButton_CurrentUser(object instance)
        {
            var that = (global::Facebook.Client.Controls.LoginButton)instance;
            return that.CurrentUser;
        }
        private object get_22_LoginButton_CornerRadius(object instance)
        {
            var that = (global::Facebook.Client.Controls.LoginButton)instance;
            return that.CornerRadius;
        }
        private void set_22_LoginButton_CornerRadius(object instance, object Value)
        {
            var that = (global::Facebook.Client.Controls.LoginButton)instance;
            that.CornerRadius = (global::Windows.UI.Xaml.CornerRadius)Value;
        }

        private global::Windows.UI.Xaml.Markup.IXamlMember CreateXamlMember(string longMemberName)
        {
            global::EventConnection.EventConnection_WindowsPhone_XamlTypeInfo.XamlMember xamlMember = null;
            global::EventConnection.EventConnection_WindowsPhone_XamlTypeInfo.XamlUserType userType;

            switch (longMemberName)
            {
            case "Microsoft.Practices.Prism.Mvvm.MvvmAppBase.IsSuspending":
                userType = (global::EventConnection.EventConnection_WindowsPhone_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.Practices.Prism.Mvvm.MvvmAppBase");
                xamlMember = new global::EventConnection.EventConnection_WindowsPhone_XamlTypeInfo.XamlMember(this, "IsSuspending", "Boolean");
                xamlMember.Getter = get_0_MvvmAppBase_IsSuspending;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.Practices.Prism.Mvvm.ViewModelLocator.AutoWireViewModel":
                userType = (global::EventConnection.EventConnection_WindowsPhone_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.Practices.Prism.Mvvm.ViewModelLocator");
                xamlMember = new global::EventConnection.EventConnection_WindowsPhone_XamlTypeInfo.XamlMember(this, "AutoWireViewModel", "Boolean");
                xamlMember.SetTargetTypeName("Windows.UI.Xaml.DependencyObject");
                xamlMember.SetIsAttachable();
                xamlMember.Getter = get_1_ViewModelLocator_AutoWireViewModel;
                xamlMember.Setter = set_1_ViewModelLocator_AutoWireViewModel;
                break;
            case "EventConnection.Controls.MenuControl.ExpliciteEventsLock":
                userType = (global::EventConnection.EventConnection_WindowsPhone_XamlTypeInfo.XamlUserType)GetXamlTypeByName("EventConnection.Controls.MenuControl");
                xamlMember = new global::EventConnection.EventConnection_WindowsPhone_XamlTypeInfo.XamlMember(this, "ExpliciteEventsLock", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_2_MenuControl_ExpliciteEventsLock;
                xamlMember.Setter = set_2_MenuControl_ExpliciteEventsLock;
                break;
            case "EventConnection.Controls.MenuControl.ExpliciteChatLock":
                userType = (global::EventConnection.EventConnection_WindowsPhone_XamlTypeInfo.XamlUserType)GetXamlTypeByName("EventConnection.Controls.MenuControl");
                xamlMember = new global::EventConnection.EventConnection_WindowsPhone_XamlTypeInfo.XamlMember(this, "ExpliciteChatLock", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_3_MenuControl_ExpliciteChatLock;
                xamlMember.Setter = set_3_MenuControl_ExpliciteChatLock;
                break;
            case "EventConnection.Controls.MenuControl.ExpliciteReviewLock":
                userType = (global::EventConnection.EventConnection_WindowsPhone_XamlTypeInfo.XamlUserType)GetXamlTypeByName("EventConnection.Controls.MenuControl");
                xamlMember = new global::EventConnection.EventConnection_WindowsPhone_XamlTypeInfo.XamlMember(this, "ExpliciteReviewLock", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_4_MenuControl_ExpliciteReviewLock;
                xamlMember.Setter = set_4_MenuControl_ExpliciteReviewLock;
                break;
            case "Microsoft.Practices.Prism.StoreApps.VisualStateAwarePage.MinimalLayoutWidth":
                userType = (global::EventConnection.EventConnection_WindowsPhone_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.Practices.Prism.StoreApps.VisualStateAwarePage");
                xamlMember = new global::EventConnection.EventConnection_WindowsPhone_XamlTypeInfo.XamlMember(this, "MinimalLayoutWidth", "Int32");
                xamlMember.Getter = get_5_VisualStateAwarePage_MinimalLayoutWidth;
                xamlMember.Setter = set_5_VisualStateAwarePage_MinimalLayoutWidth;
                break;
            case "Microsoft.Practices.Prism.StoreApps.VisualStateAwarePage.GoBackCommand":
                userType = (global::EventConnection.EventConnection_WindowsPhone_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.Practices.Prism.StoreApps.VisualStateAwarePage");
                xamlMember = new global::EventConnection.EventConnection_WindowsPhone_XamlTypeInfo.XamlMember(this, "GoBackCommand", "Microsoft.Practices.Prism.Commands.DelegateCommand");
                xamlMember.Getter = get_6_VisualStateAwarePage_GoBackCommand;
                xamlMember.Setter = set_6_VisualStateAwarePage_GoBackCommand;
                break;
            case "JISoft.RatingControl.Rating.AllowSelectingZero":
                userType = (global::EventConnection.EventConnection_WindowsPhone_XamlTypeInfo.XamlUserType)GetXamlTypeByName("JISoft.RatingControl.Rating");
                xamlMember = new global::EventConnection.EventConnection_WindowsPhone_XamlTypeInfo.XamlMember(this, "AllowSelectingZero", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_7_Rating_AllowSelectingZero;
                xamlMember.Setter = set_7_Rating_AllowSelectingZero;
                break;
            case "JISoft.RatingControl.Rating.ReadOnly":
                userType = (global::EventConnection.EventConnection_WindowsPhone_XamlTypeInfo.XamlUserType)GetXamlTypeByName("JISoft.RatingControl.Rating");
                xamlMember = new global::EventConnection.EventConnection_WindowsPhone_XamlTypeInfo.XamlMember(this, "ReadOnly", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_8_Rating_ReadOnly;
                xamlMember.Setter = set_8_Rating_ReadOnly;
                break;
            case "JISoft.RatingControl.Rating.RatingItemCount":
                userType = (global::EventConnection.EventConnection_WindowsPhone_XamlTypeInfo.XamlUserType)GetXamlTypeByName("JISoft.RatingControl.Rating");
                xamlMember = new global::EventConnection.EventConnection_WindowsPhone_XamlTypeInfo.XamlMember(this, "RatingItemCount", "Int32");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_9_Rating_RatingItemCount;
                xamlMember.Setter = set_9_Rating_RatingItemCount;
                break;
            case "JISoft.RatingControl.Rating.Value":
                userType = (global::EventConnection.EventConnection_WindowsPhone_XamlTypeInfo.XamlUserType)GetXamlTypeByName("JISoft.RatingControl.Rating");
                xamlMember = new global::EventConnection.EventConnection_WindowsPhone_XamlTypeInfo.XamlMember(this, "Value", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_10_Rating_Value;
                xamlMember.Setter = set_10_Rating_Value;
                break;
            case "JISoft.RatingControl.Rating.FilledItemStyle":
                userType = (global::EventConnection.EventConnection_WindowsPhone_XamlTypeInfo.XamlUserType)GetXamlTypeByName("JISoft.RatingControl.Rating");
                xamlMember = new global::EventConnection.EventConnection_WindowsPhone_XamlTypeInfo.XamlMember(this, "FilledItemStyle", "Windows.UI.Xaml.Style");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_11_Rating_FilledItemStyle;
                xamlMember.Setter = set_11_Rating_FilledItemStyle;
                break;
            case "JISoft.RatingControl.Rating.UnfilledItemStyle":
                userType = (global::EventConnection.EventConnection_WindowsPhone_XamlTypeInfo.XamlUserType)GetXamlTypeByName("JISoft.RatingControl.Rating");
                xamlMember = new global::EventConnection.EventConnection_WindowsPhone_XamlTypeInfo.XamlMember(this, "UnfilledItemStyle", "Windows.UI.Xaml.Style");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_12_Rating_UnfilledItemStyle;
                xamlMember.Setter = set_12_Rating_UnfilledItemStyle;
                break;
            case "JISoft.RatingControl.Rating.ShowSelectionHelper":
                userType = (global::EventConnection.EventConnection_WindowsPhone_XamlTypeInfo.XamlUserType)GetXamlTypeByName("JISoft.RatingControl.Rating");
                xamlMember = new global::EventConnection.EventConnection_WindowsPhone_XamlTypeInfo.XamlMember(this, "ShowSelectionHelper", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_13_Rating_ShowSelectionHelper;
                xamlMember.Setter = set_13_Rating_ShowSelectionHelper;
                break;
            case "JISoft.RatingControl.Rating.Orientation":
                userType = (global::EventConnection.EventConnection_WindowsPhone_XamlTypeInfo.XamlUserType)GetXamlTypeByName("JISoft.RatingControl.Rating");
                xamlMember = new global::EventConnection.EventConnection_WindowsPhone_XamlTypeInfo.XamlMember(this, "Orientation", "Windows.UI.Xaml.Controls.Orientation");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_14_Rating_Orientation;
                xamlMember.Setter = set_14_Rating_Orientation;
                break;
            case "JISoft.RatingControl.RatingItem.StrokeThickness":
                userType = (global::EventConnection.EventConnection_WindowsPhone_XamlTypeInfo.XamlUserType)GetXamlTypeByName("JISoft.RatingControl.RatingItem");
                xamlMember = new global::EventConnection.EventConnection_WindowsPhone_XamlTypeInfo.XamlMember(this, "StrokeThickness", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_15_RatingItem_StrokeThickness;
                xamlMember.Setter = set_15_RatingItem_StrokeThickness;
                break;
            case "Tools.Extentions.xaml.HtmlInput.Html":
                userType = (global::EventConnection.EventConnection_WindowsPhone_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Tools.Extentions.xaml.HtmlInput");
                xamlMember = new global::EventConnection.EventConnection_WindowsPhone_XamlTypeInfo.XamlMember(this, "Html", "String");
                xamlMember.SetTargetTypeName("Windows.UI.Xaml.DependencyObject");
                xamlMember.SetIsDependencyProperty();
                xamlMember.SetIsAttachable();
                xamlMember.Getter = get_16_HtmlInput_Html;
                xamlMember.Setter = set_16_HtmlInput_Html;
                break;
            case "Facebook.Client.Controls.LoginButton.FetchUserInfo":
                userType = (global::EventConnection.EventConnection_WindowsPhone_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Facebook.Client.Controls.LoginButton");
                xamlMember = new global::EventConnection.EventConnection_WindowsPhone_XamlTypeInfo.XamlMember(this, "FetchUserInfo", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_17_LoginButton_FetchUserInfo;
                xamlMember.Setter = set_17_LoginButton_FetchUserInfo;
                break;
            case "Facebook.Client.Controls.LoginButton.Permissions":
                userType = (global::EventConnection.EventConnection_WindowsPhone_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Facebook.Client.Controls.LoginButton");
                xamlMember = new global::EventConnection.EventConnection_WindowsPhone_XamlTypeInfo.XamlMember(this, "Permissions", "String");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_18_LoginButton_Permissions;
                xamlMember.Setter = set_18_LoginButton_Permissions;
                break;
            case "Facebook.Client.Controls.LoginButton.DefaultAudience":
                userType = (global::EventConnection.EventConnection_WindowsPhone_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Facebook.Client.Controls.LoginButton");
                xamlMember = new global::EventConnection.EventConnection_WindowsPhone_XamlTypeInfo.XamlMember(this, "DefaultAudience", "Facebook.Client.Controls.Audience");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_19_LoginButton_DefaultAudience;
                xamlMember.Setter = set_19_LoginButton_DefaultAudience;
                break;
            case "Facebook.Client.Controls.LoginButton.LoginBehavior":
                userType = (global::EventConnection.EventConnection_WindowsPhone_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Facebook.Client.Controls.LoginButton");
                xamlMember = new global::EventConnection.EventConnection_WindowsPhone_XamlTypeInfo.XamlMember(this, "LoginBehavior", "Facebook.Client.FacebookLoginBehavior");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_20_LoginButton_LoginBehavior;
                xamlMember.Setter = set_20_LoginButton_LoginBehavior;
                break;
            case "Facebook.Client.Controls.LoginButton.CurrentUser":
                userType = (global::EventConnection.EventConnection_WindowsPhone_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Facebook.Client.Controls.LoginButton");
                xamlMember = new global::EventConnection.EventConnection_WindowsPhone_XamlTypeInfo.XamlMember(this, "CurrentUser", "Facebook.Client.GraphUser");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_21_LoginButton_CurrentUser;
                xamlMember.SetIsReadOnly();
                break;
            case "Facebook.Client.Controls.LoginButton.CornerRadius":
                userType = (global::EventConnection.EventConnection_WindowsPhone_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Facebook.Client.Controls.LoginButton");
                xamlMember = new global::EventConnection.EventConnection_WindowsPhone_XamlTypeInfo.XamlMember(this, "CornerRadius", "Windows.UI.Xaml.CornerRadius");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_22_LoginButton_CornerRadius;
                xamlMember.Setter = set_22_LoginButton_CornerRadius;
                break;
            }
            return xamlMember;
        }
    }

    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks", "4.0.0.0")]    
    [System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class XamlSystemBaseType : global::Windows.UI.Xaml.Markup.IXamlType
    {
        string _fullName;
        global::System.Type _underlyingType;

        public XamlSystemBaseType(string fullName, global::System.Type underlyingType)
        {
            _fullName = fullName;
            _underlyingType = underlyingType;
        }

        public string FullName { get { return _fullName; } }

        public global::System.Type UnderlyingType
        {
            get
            {
                return _underlyingType;
            }
        }

        virtual public global::Windows.UI.Xaml.Markup.IXamlType BaseType { get { throw new global::System.NotImplementedException(); } }
        virtual public global::Windows.UI.Xaml.Markup.IXamlMember ContentProperty { get { throw new global::System.NotImplementedException(); } }
        virtual public global::Windows.UI.Xaml.Markup.IXamlMember GetMember(string name) { throw new global::System.NotImplementedException(); }
        virtual public bool IsArray { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsCollection { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsConstructible { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsDictionary { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsMarkupExtension { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsBindable { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsReturnTypeStub { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsLocalType { get { throw new global::System.NotImplementedException(); } }
        virtual public global::Windows.UI.Xaml.Markup.IXamlType ItemType { get { throw new global::System.NotImplementedException(); } }
        virtual public global::Windows.UI.Xaml.Markup.IXamlType KeyType { get { throw new global::System.NotImplementedException(); } }
        virtual public object ActivateInstance() { throw new global::System.NotImplementedException(); }
        virtual public void AddToMap(object instance, object key, object item)  { throw new global::System.NotImplementedException(); }
        virtual public void AddToVector(object instance, object item)  { throw new global::System.NotImplementedException(); }
        virtual public void RunInitializer()   { throw new global::System.NotImplementedException(); }
        virtual public object CreateFromString(string input)   { throw new global::System.NotImplementedException(); }
    }
    
    internal delegate object Activator();
    internal delegate void AddToCollection(object instance, object item);
    internal delegate void AddToDictionary(object instance, object key, object item);

    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks", "4.0.0.0")]    
    [System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class XamlUserType : global::EventConnection.EventConnection_WindowsPhone_XamlTypeInfo.XamlSystemBaseType
    {
        global::EventConnection.EventConnection_WindowsPhone_XamlTypeInfo.XamlTypeInfoProvider _provider;
        global::Windows.UI.Xaml.Markup.IXamlType _baseType;
        bool _isArray;
        bool _isMarkupExtension;
        bool _isBindable;
        bool _isReturnTypeStub;
        bool _isLocalType;

        string _contentPropertyName;
        string _itemTypeName;
        string _keyTypeName;
        global::System.Collections.Generic.Dictionary<string, string> _memberNames;
        global::System.Collections.Generic.Dictionary<string, object> _enumValues;

        public XamlUserType(global::EventConnection.EventConnection_WindowsPhone_XamlTypeInfo.XamlTypeInfoProvider provider, string fullName, global::System.Type fullType, global::Windows.UI.Xaml.Markup.IXamlType baseType)
            :base(fullName, fullType)
        {
            _provider = provider;
            _baseType = baseType;
        }

        // --- Interface methods ----

        override public global::Windows.UI.Xaml.Markup.IXamlType BaseType { get { return _baseType; } }
        override public bool IsArray { get { return _isArray; } }
        override public bool IsCollection { get { return (CollectionAdd != null); } }
        override public bool IsConstructible { get { return (Activator != null); } }
        override public bool IsDictionary { get { return (DictionaryAdd != null); } }
        override public bool IsMarkupExtension { get { return _isMarkupExtension; } }
        override public bool IsBindable { get { return _isBindable; } }
        override public bool IsReturnTypeStub { get { return _isReturnTypeStub; } }
        override public bool IsLocalType { get { return _isLocalType; } }

        override public global::Windows.UI.Xaml.Markup.IXamlMember ContentProperty
        {
            get { return _provider.GetMemberByLongName(_contentPropertyName); }
        }

        override public global::Windows.UI.Xaml.Markup.IXamlType ItemType
        {
            get { return _provider.GetXamlTypeByName(_itemTypeName); }
        }

        override public global::Windows.UI.Xaml.Markup.IXamlType KeyType
        {
            get { return _provider.GetXamlTypeByName(_keyTypeName); }
        }

        override public global::Windows.UI.Xaml.Markup.IXamlMember GetMember(string name)
        {
            if (_memberNames == null)
            {
                return null;
            }
            string longName;
            if (_memberNames.TryGetValue(name, out longName))
            {
                return _provider.GetMemberByLongName(longName);
            }
            return null;
        }

        override public object ActivateInstance()
        {
            return Activator(); 
        }

        override public void AddToMap(object instance, object key, object item) 
        {
            DictionaryAdd(instance, key, item);
        }

        override public void AddToVector(object instance, object item)
        {
            CollectionAdd(instance, item);
        }

        override public void RunInitializer() 
        {
            System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(UnderlyingType.TypeHandle);
        }

        override public object CreateFromString(string input)
        {
            if (_enumValues != null)
            {
                int value = 0;

                string[] valueParts = input.Split(',');

                foreach (string valuePart in valueParts) 
                {
                    object partValue;
                    int enumFieldValue = 0;
                    try
                    {
                        if (_enumValues.TryGetValue(valuePart.Trim(), out partValue))
                        {
                            enumFieldValue = global::System.Convert.ToInt32(partValue);
                        }
                        else
                        {
                            try
                            {
                                enumFieldValue = global::System.Convert.ToInt32(valuePart.Trim());
                            }
                            catch( global::System.FormatException )
                            {
                                foreach( string key in _enumValues.Keys )
                                {
                                    if( string.Compare(valuePart.Trim(), key, global::System.StringComparison.OrdinalIgnoreCase) == 0 )
                                    {
                                        if( _enumValues.TryGetValue(key.Trim(), out partValue) )
                                        {
                                            enumFieldValue = global::System.Convert.ToInt32(partValue);
                                            break;
                                        }
                                    }
                                }
                            }
                        }
                        value |= enumFieldValue; 
                    }
                    catch( global::System.FormatException )
                    {
                        throw new global::System.ArgumentException(input, FullName);
                    }
                }

                return value; 
            }
            throw new global::System.ArgumentException(input, FullName);
        }

        // --- End of Interface methods

        public Activator Activator { get; set; }
        public AddToCollection CollectionAdd { get; set; }
        public AddToDictionary DictionaryAdd { get; set; }

        public void SetContentPropertyName(string contentPropertyName)
        {
            _contentPropertyName = contentPropertyName;
        }

        public void SetIsArray()
        {
            _isArray = true; 
        }

        public void SetIsMarkupExtension()
        {
            _isMarkupExtension = true;
        }

        public void SetIsBindable()
        {
            _isBindable = true;
        }

        public void SetIsReturnTypeStub()
        {
            _isReturnTypeStub = true;
        }

        public void SetIsLocalType()
        {
            _isLocalType = true;
        }

        public void SetItemTypeName(string itemTypeName)
        {
            _itemTypeName = itemTypeName;
        }

        public void SetKeyTypeName(string keyTypeName)
        {
            _keyTypeName = keyTypeName;
        }

        public void AddMemberName(string shortName)
        {
            if(_memberNames == null)
            {
                _memberNames =  new global::System.Collections.Generic.Dictionary<string,string>();
            }
            _memberNames.Add(shortName, FullName + "." + shortName);
        }

        public void AddEnumValue(string name, object value)
        {
            if (_enumValues == null)
            {
                _enumValues = new global::System.Collections.Generic.Dictionary<string, object>();
            }
            _enumValues.Add(name, value);
        }
    }

    internal delegate object Getter(object instance);
    internal delegate void Setter(object instance, object value);

    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks", "4.0.0.0")]    
    [System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class XamlMember : global::Windows.UI.Xaml.Markup.IXamlMember
    {
        global::EventConnection.EventConnection_WindowsPhone_XamlTypeInfo.XamlTypeInfoProvider _provider;
        string _name;
        bool _isAttachable;
        bool _isDependencyProperty;
        bool _isReadOnly;

        string _typeName;
        string _targetTypeName;

        public XamlMember(global::EventConnection.EventConnection_WindowsPhone_XamlTypeInfo.XamlTypeInfoProvider provider, string name, string typeName)
        {
            _name = name;
            _typeName = typeName;
            _provider = provider;
        }

        public string Name { get { return _name; } }

        public global::Windows.UI.Xaml.Markup.IXamlType Type
        {
            get { return _provider.GetXamlTypeByName(_typeName); }
        }

        public void SetTargetTypeName(string targetTypeName)
        {
            _targetTypeName = targetTypeName;
        }
        public global::Windows.UI.Xaml.Markup.IXamlType TargetType
        {
            get { return _provider.GetXamlTypeByName(_targetTypeName); }
        }

        public void SetIsAttachable() { _isAttachable = true; }
        public bool IsAttachable { get { return _isAttachable; } }

        public void SetIsDependencyProperty() { _isDependencyProperty = true; }
        public bool IsDependencyProperty { get { return _isDependencyProperty; } }

        public void SetIsReadOnly() { _isReadOnly = true; }
        public bool IsReadOnly { get { return _isReadOnly; } }

        public Getter Getter { get; set; }
        public object GetValue(object instance)
        {
            if (Getter != null)
                return Getter(instance);
            else
                throw new global::System.InvalidOperationException("GetValue");
        }

        public Setter Setter { get; set; }
        public void SetValue(object instance, object value)
        {
            if (Setter != null)
                Setter(instance, value);
            else
                throw new global::System.InvalidOperationException("SetValue");
        }
    }
}


